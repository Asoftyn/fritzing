[buildout]
eggs-directory=/opt/Plone-3.1/buildout-cache/eggs
download-cache=/opt/Plone-3.1/buildout-cache/downloads
newest = false
parts =
    plone
    zope2
    productdistros
    zeoserver
    client1
    client2
    zopepy
    precompile
    chown
    unifiedinstaller

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

# Add additional eggs here
# elementtree is required by Plone
eggs =
    elementtree
    FeedParser
	Products.CacheSetup
	Products.DataGridField
	Products.AddRemoveWidget
	Products.Poi
    fritzing.policy
    fritzing.theme
    
# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =
    src/fritzing.policy
    src/fritzing.theme

[plone]
recipe = plone.recipe.plone >=3.1.1, < 3.2dev

[zope2]
recipe = plone.recipe.zope2install
url = ${plone:zope2-url}

# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL, 
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.
[productdistros]
recipe = plone.recipe.distros
urls =
    http://www.zope.org/Members/shh/DocFinderTab/1.0.2/DocFinderTab-1.0.2.tar.gz
    http://plone.org/products/clouseau/releases/0.8.1/clouseau-0-8-1.zip
	http://plone.org/products/collage/releases/1.1/collage-1.1.tar.gz
	http://plone.org/products/atflashmovie/releases/1.0.2/atflashmovie-1-0-2-tar.gz
nested-packages =
version-suffix-packages = 


[zeoserver]
recipe = plone.recipe.zope2zeoserver
zope2-location = ${zope2:location}
zeo-address = 127.0.0.1:8100
effective-user = plone


[client1]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
zeo-client = true
zeo-address = ${zeoserver:zeo-address}
# The line below sets only the initial password. It will not change an
# existing password.
user = admin:jEuM8IAp
http-address = 8080
effective-user = plone
#debug-mode = on
#verbose-security = on

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} ${plone:eggs} my.package
eggs =
    ${plone:eggs}
    ${buildout:eggs}

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml = 
    fritzing.policy
	fritzing.theme
    
products =
    ${buildout:directory}/products
    ${productdistros:location}
    ${plone:products}


[client2]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
zeo-client = true
zeo-address = ${zeoserver:zeo-address}
user = ${client1:user}
http-address = 8081
effective-user = plone
#debug-mode = on
#verbose-security = on
eggs = ${client1:eggs}
zcml = ${client1:zcml}
products = ${client1:products}


[zopepy]
recipe = zc.recipe.egg
eggs = ${client1:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy


[precompile]
recipe = plone.recipe.precompiler


[chown]
# This recipe is used to set permissions -- and ownership for root mode installs
recipe = plone.recipe.command
command =
    chmod 600 .installed.cfg
    touch ${buildout:directory}/var/log/zeoserver.log
    find ${buildout:directory} -type d -name var -exec chown -R ${client1:effective-user} \{\} \;
    find ${buildout:directory} -type d -name LC_MESSAGES -exec chown -R ${client1:effective-user} \{\} \;
    find ${buildout:directory} -name runzope -exec chown ${client1:effective-user} \{\} \;
update-command = ${chown:command}


[unifiedinstaller]
recipe = plone.recipe.unifiedinstaller
user = ${client1:user}
primary-port = ${client1:http-address}
sudo-command = sudo
